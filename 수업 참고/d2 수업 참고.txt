총 100 기가 이하, 일시 2기가 이하 클라우드 저장 공간 = 깃허브 / 다양한 매체로 업로드 가능 / = for free
깃과 확장파일과 실시간 동기화 / 깃허브 폴더에서, tortoise 이용해서 자료 확인하고 commit 해야 업로드 됨 / 깃에 업로드 확인은 보기-표시-숨긴 파일 보기
업로드 파일은 깃에서 히스토리가 남아서, 업로드 파일은 이전 버전으로도 복구 가능

집에서 파일 만들고 깃 클론 하면 다운로드 함
반드시 pull을 하고 깃 파일 작업해야 오류가 없음
폴더 파일은 add 후 commit 후 push
 깃허브 주소 복사 하면 그걸로 깃 클론 생성 가능

실수로 창 끄면 창에서 레이아웃에서 디폴트 에디터용 꺼내면 됨

프로젝트 세팅 변경-맵 변경 전 검증하기

컨텐츠 드로우-미티리얼 생성-액터 배치 패널(스택틱 매쉬들)
머티리얼 그래프 - 12 3rgb 4rgb+a(투명도) - 연결 후 적용
이니시브 = 발광도 / 스펠큘라 - 겉 빛 반사도
미티리얼 그래프에서 우클릭 -검색 -텍스쳐 샘플 후 디테일 수정 OR just drag and drop
언리얼은 빛으로 색감 표현하는 시스템. 즉 흰색은 더이상 다른 색 추가 불가
add (+) 추가
1-x는 반전 one minus
블렌디드 모드 - mskd - 오파시티 마스크드 (검정 삭제)
alt로 링크 끊고 ctrl로 이동





시간이 있어야 흐름 기록 예측 가능 -> 이벤트 기반으로 측정 -> 블루프린트 코딩

월드 세팅 = 베이직 해도, 편집 프로젝트 세팅에서 맵모드에서 변경 가능

컨텐츠 드로우-블르트린트 클래스-액터 뷰포트

편지-프로젝트 세팅- 맵&모드 (각종 기본값 변경 가능)
클래스란?
오브젝트(기본 객체)
액터(actor) = 오브젝트 + 위치 기능
폰(pawn) = 액터 + possessing
캐릭터 = pawn + 중력,속도 등 사람의 움직임

액터는 컴포넌트들의 조합
씬컴포넌트 = 위치값 부여 / 이게 있어야 매쉬 이동도 하고 회전도 함
액터 컴포넌트 = 트랜스폼 불가

창에서 레이아웃 디폴트 다시 가능/뷰토프에서도 소환가능

이벤트(인풋)-액션(연결되는 아웃풋) = 코드 생성
코드가 적용된 액터를 월드에 설치해야 코드가 적용됨 
클래스 = 몰드와도 같음, 혹은 설계 원본
클래스에서 산출된 것은 객체(object)임

변수는 이름과 유형이 중요 = 맥락이 있어야 규칙에 맞는 인풋 가능
벡터 = xyz

world location =/= relative location (블루프린트 내 액터 기준점에서 부터)
